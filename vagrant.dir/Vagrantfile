#Vagrantfile to create 4 Nodes: Controll-Node(RKE) and a Kubernetes-Cluster over RKE with 1Master- and 2Workernodes 

Vagrant.configure("2") do |config|

#Box zum deployen
  config.vm.box = "generic/ubuntu1804"

#Proxy-Config, wenn das Modul installiert wurde
                 ##vagrant plugin install vagrant-proxyconf
  config.proxy.http     = "http://192.168.100.101:8080"
  config.proxy.https    = "http://192.168.100.101:8080"
  config.proxy.no_proxy = "localhost, rke, master, worker1, worker2, 127.0.0.1, 192.168.5.0/24"

#Kubernetes-Master-Node
  config.vm.define "master" do |master|
    master.vm.provision :shell, path: "scripts/docker-install.sh"
    master.vm.provision "file", source: "files/id_rsa.pub", destination: "/tmp/id_rsa.pub"
    master.vm.provision :shell, path: "scripts/ssh-nodes.sh"
    master.vm.network "private_network", ip: "192.168.5.3"
    master.vm.provider "virtualbox" do |v|
      v.memory = 2048
      v.cpus = 2
      #v.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    end
  end

#Kubernetes-Worker-Nodes
  config.vm.define "worker1" do |worker1|
    worker1.vm.provision :shell, path: "scripts/docker-install.sh"
    worker1.vm.provision "file", source: "files/id_rsa.pub", destination: "/tmp/id_rsa.pub"
    worker1.vm.provision :shell, path: "scripts/ssh-nodes.sh"
    worker1.vm.network "private_network", ip: "192.168.5.4"
    worker1.vm.provider "virtualbox" do |v|
      v.memory = 2048
      v.cpus = 2
      #v.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    end
  end

  config.vm.define "worker2" do |worker2|
    worker2.vm.provision :shell, path: "scripts/docker-install.sh"
    worker2.vm.provision "file", source: "files/id_rsa.pub", destination: "/tmp/id_rsa.pub"
    worker2.vm.provision :shell, privileged: true, path: "scripts/ssh-nodes.sh"
    worker2.vm.network "private_network", ip: "192.168.5.5"
    worker2.vm.provider "virtualbox" do |v|
      v.memory = 2048
      v.cpus = 2
      #v.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    end
  end

#Control-Node
  config.vm.define "rke" do |rke|
    rke.vm.provision :shell, path: "scripts/rke-install.sh"
    rke.vm.provision :file, source: "files/id_rsa", destination: "/tmp/id_rsa"
    rke.vm.provision :file, source: "files/cluster.yml", destination: "/tmp/cluster.yml"
    rke.vm.provision :shell, path: "scripts/create-cluster.sh"
    rke.vm.network "private_network", ip: "192.168.5.2"
    rke.vm.provider "virtualbox" do |v|
      v.memory = 512
      v.cpus = 1
      #v.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    end
  end

end


